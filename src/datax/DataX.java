package datax;

//import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
//import java.io.FileNotFoundException;
//import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.*;

public class DataX {

	/**
	 * @param args
	 * @throws IOException 
	 */
	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		File folder = new File(".\\src\\Logs");
		// FSE Data File
		File fsedata = new File(".\\src\\fsedata.txt");		
		if(fsedata.exists())
			fsedata.delete();
		else {
			try {
				fsedata.createNewFile();
			} catch (IOException ioe) {
				System.err.println(ioe);
				System.exit(1);
			}
		}
		
		BufferedWriter feedbackWriter;
		try {
			feedbackWriter = new BufferedWriter(new FileWriter(fsedata, true));
			feedbackWriter.write("Leg 1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,Leg 2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,OVERALL  - TD LEG ,,,,,OVERALL - NTD LEG,,,,,WHEN PIONEER IS IN RED FOR S1,,,,,WHEN PIONEER IS IN RED FOR S2,,,,,WHEN PIONEER IS IN RED FOR D1 ,,,,,WHEN PIONEER IS IN RED FOR D2,,,,");
			feedbackWriter.newLine();
			feedbackWriter.write("Filename,O2 valve leak,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,");
			feedbackWriter.write("Filename,O2 valve block,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,"); 
			feedbackWriter.write("Filename,N2 valve stuck open,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,");
			feedbackWriter.write("Filename,N2 valve block,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES, # CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,");
			feedbackWriter.write("Filename,O2 sensor fail lower,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,");
			feedbackWriter.write("Filename,N2 sensor fail lower (system error),LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,");
			feedbackWriter.write("Filename,O2 sensor fail lower,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,");
			feedbackWriter.write("Filename,O2 valve stuck open,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,");
			feedbackWriter.write("Filename,N2 sensor fail lower,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,");
			feedbackWriter.write("Filename,O2 valve leak (AFIRA failure - says O2 block),LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,");
			feedbackWriter.write("Filename,N2 valve stuck open,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,");
			feedbackWriter.write("Filename,Mixer block,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,");
			feedbackWriter.write
			feedbackWriter.newLine();
			feedbackWriter.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}		
		
		// FSE Data File
		File fsePioneerDelay = new File(".\\src\\fsePioneerDelay.txt");		
		if(fsePioneerDelay.exists())
			fsePioneerDelay.delete();
		else {
			try {
				fsePioneerDelay.createNewFile();
			} catch (IOException ioe) {
				System.err.println(ioe);
				System.exit(1);
			}
		}
		
		BufferedWriter feedbackWriter3;
		try {
			feedbackWriter3 = new BufferedWriter(new FileWriter(fsePioneerDelay, true));
			feedbackWriter3.write(",NTD LEG ,,,,,TD LEG,,,,");
			feedbackWriter3.newLine();
			feedbackWriter3.write("FileName, TIME IN RED,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED, FileName, TIME IN RED,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED");
			feedbackWriter3.newLine();
			feedbackWriter3.close();
			
		} catch (IOException ioe) {
			System.err.println(ioe);
			System.exit(1);
		}
		
		// Pioneer Data File
		File pdata = new File(".\\src\\pioneerdata.txt");
		if(pdata.exists())
			pdata.delete();
		else {
			try {
				pdata.createNewFile();
			} catch (IOException ioe) {
				System.err.println(ioe);
				System.exit(1);
			}
		}
		BufferedWriter feedbackWriter2;
		try {
			feedbackWriter2 = new BufferedWriter(new FileWriter(pdata, true));
			feedbackWriter2.write(",N2 LEAK,1 OR 2,TD OR NTD,V OR T,0=NO  1=YES,,,#CLICKS DURING RED FOR THIS FAILURE,,,,,,,,,,,,,,,,O2 STUCK OPEN,1 OR 2,TD OR NTD,V OR T,0=NO  1=YES,,,#CLICKS DURING RED FOR THIS FAILURE,,,,,,,,,,,,,,,,MIXER BLOCK,1 OR 2,TD OR NTD,V OR T,0=NO  1=YES,,,#CLICKS DURING RED FOR THIS FAILURE,,,,,,,,,,,,,,,,O2 SENSOR FAIL (AFIRA FAILURE - SAYS O2 LEAK,1 OR 2,TD OR NTD,V OR T,0=NO  1=YES,,,#CLICKS DURING RED FOR THIS FAILURE,,,,,,,,,,,,,,,,OVERALL  - TD LEG ,,,,,OVERALL - NTD LEG,,,,");
			feedbackWriter2.newLine();
			feedbackWriter2.write("Filename,Failure S1,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,Filename,Failure S2,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,Filename,Failure D1,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,Filename,Failure D2,LEG,DELAY,MEDIUM,CORRECT REPAIR INITIATED?,TIME IN RED,# INCORRECT REPAIRS,#CLICKS O2 TANK,#CLICKS O2 FLOW METER,#CLICKS N2 TANK,#CLICKS N2 FLOW METER,#CLICKS MIXER FLOW METER,#CLICKS CO2 HISTORY GRAPH,#CLICKS O2 HISTORY GRAPH,#CLICKS N2 HISTORY GRAPH,#CLICKS TEMP HISTORY GRAPH,#CLICKS HUMID HISTORY GRAPH,#CLICKS FLOW RATES,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,TIME IN RED,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED,TIME IN RED,# CO2 LOGS MISSED,%CO2 LOGS MISSED,# CONNECTION CHECKS MISSED,% CONNECTION CHECKS MISSED");
			feedbackWriter2.newLine();
			feedbackWriter2.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}	
		
		ArrayList<String> fileList = ReadFiles.listFilesForFolder(folder);
		int sizeOfList = fileList.size();
		String listOfFiles[] = new String[sizeOfList]; 
		listOfFiles = fileList.toArray(listOfFiles);
		
		
		for (int i = 0; i < sizeOfList;) {
			String fileLoc = listOfFiles[i];
			if (fileLoc.endsWith("v.txt")) {				
				Run run = new Run(2, listOfFiles[i++], listOfFiles[i++], listOfFiles[i++], listOfFiles[i++]);
				Extractor.fsePioneerError = new FSE_PioneerErrors[4];
				Extractor.extract(run, fsedata, pdata, fsePioneerDelay);
				try {
					feedbackWriter = new BufferedWriter(new FileWriter(fsedata, true));
					feedbackWriter.newLine();
					feedbackWriter.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				try {
					feedbackWriter2 = new BufferedWriter(new FileWriter(pdata, true));
					feedbackWriter2.newLine();
					feedbackWriter2.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}	
			}
			else if (fileLoc.endsWith("t.txt")) {				
				Run run = new Run(1, listOfFiles[i++], listOfFiles[i++], listOfFiles[i++], listOfFiles[i++]);
				Extractor.fsePioneerError = new FSE_PioneerErrors[4];
				Extractor.extract(run, fsedata, pdata, fsePioneerDelay);
				try {
					feedbackWriter = new BufferedWriter(new FileWriter(fsedata, true));
					feedbackWriter.newLine();
					feedbackWriter.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				try {
					feedbackWriter2 = new BufferedWriter(new FileWriter(pdata, true));
					feedbackWriter2.newLine();
					feedbackWriter2.close();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
			} else i++;	
						
		}
	}

}
